# This is a basic workflow to help you get started with Actions

name: CRDA-CI-Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request_target:
    branches: [ master ]

env:
  REGISTRY: docker.pkg.github.com #ghcr.io
  REPOSITORY: fabric8-analytics-server
  DEFAULT_TAG: latest
  FULL_NAME: bayesian-bayesian-api
  TESTS_IMAGE: server-tests
  ORGANIZATION: practice-fabric8-analytics

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Runs a single command using the runners shell
      #- name: setup docker buildx
      #  uses: docker/setup-buildx-action@v1
      #  id: buildx
      #  with:
      #    install: true
      - name: Docker login
        run:  echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u sawood14012 --password-stdin 
      #- name: Login to Github Container Registry
      #  uses: docker/login-action@v1
      #  with:
      #    registry: docker.pkg.github.com
      #    username: ${{ github.repository_owner }}
      #    password: ${{ secrets.CR_PAT }}
      
      #- name: Build Image
      #run: make docker-build-tests

      # Runs a set of commands using the runners shell
      - name: Run Test's 
        run: bash ./qa/runtest.sh
      - name: Tag Image
        run: docker tag ${{env.TESTS_IMAGE}}:${{env.DEFAULT_TAG}} ${{env.REGISTRY}}/${{env.ORGANIZATION}}/${{env.REPOSITORY}}/${{env.FULL_NAME}}:${{env.DEFAULT_TAG}}
      #- name: Build and Push
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: .
      #    file: Dockerfile
      #    push: false
      #    no-cache: true
      #    allow: network.host
      #    load: true
      #    secrets: |
      #      GIT_AUTH_TOKEN=${{ secrets.CR_PAT }}
      #    tags: ghcr.io/practice-fabric8-analytics/fabric8-analytics-server/bayesian-bayesian-api:latest
          
      
      #- name: Registry Login
      #  run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Push Image
        run: docker push ${{env.REGISTRY}}/${{env.ORGANIZATION}}/${{env.REPOSITORY}}/${{env.FULL_NAME}}:${{env.DEFAULT_TAG}}
      - name: Make a Pull request comment - Notify Developer
        uses: mshick/add-pr-comment@v1
        with: 
          message: |
           @${{ github.event.pull_request.user.login }} your image is avaliablle in the registry:
           ``` docker pull docker.pkg.github.com/practice-fabric8-analytics/fabric8-analytics-server/bayesian-bayesian-api:latest ```
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          allow-repeats: true 
        
